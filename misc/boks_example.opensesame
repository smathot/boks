# Generated by OpenSesame 0.27 (Frisky Freud)
# Sat Jan 12 15:27:56 2013 (posix)
# <http://www.cogsci.nl/opensesame>

set foreground "white"
set subject_parity "even"
set font_size "18"
set description "A template containing a practice and an experimental phase"
set title "Boks example"
set width "1024"
set font_bold "no"
set coordinates "relative"
set height "768"
set mouse_backend "xpyriment"
set start "experiment"
set compensation "0"
set sampler_backend "legacy"
set keyboard_backend "legacy"
set background "black"
set subject_nr "0"
set canvas_backend "xpyriment"
set font_family "mono"
set synth_backend "legacy"
set font_italic "no"

define sequence test1
	set flush_keyboard "yes"
	set description "Runs a number of items in sequence"
	run test1_instructions "always"
	run test1_script "always"
	run test1_results "always"

define loop test3
	set repeat "100"
	set description "Repeatedly runs another item"
	set skip "0"
	set offset "no"
	set item "test3_sequence"
	set column_order ""
	set cycles "1"
	set order "random"
	run test3_sequence

define loop test2
	set repeat "1"
	set description "A loop containing one or more experimental blocks"
	set skip "0"
	set offset "no"
	set item "block_sequence"
	set column_order "practice"
	set cycles "1"
	set order "random"
	setcycle 0 practice "no"
	run test2_sequence

define feedback feedback
	set duration "1000"
	set reset_variables "no"
	set description "Provides feedback to the participant"
	draw textline 0 0 "You pressed button [response] in [response_time]ms" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"
	draw textline 0 64 "Correct = [correct]" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"

define form_text_display boks_info
	set rows "1;4;1"
	set description "A simple text display form"
	__form_text__
	Connected!
	
	Model: <span color='blue'>[boks_model]</span>
	Firmware version: <span color='blue'>[boks_firmware_version]</span>
	__end__
	set cols "1;1;1"
	set form_title "<span size=24>Boks info</span>"
	set ok_text "Ok"
	widget 0 0 3 1 label text="[form_title]"
	widget 0 1 3 1 label center="no" text="[form_text]"
	widget 1 2 1 1 button text="[ok_text]"


define sketchpad test1_instructions
	set duration "0"
	set description "Displays stimuli"
	draw textline 0.0 0.0 "Please press one of the buttons" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"
	draw textline 0.0 64.0 "Hold the button until the test is finished" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"

define sketchpad white_display
	set duration "0"
	set description "Displays stimuli"
	set background "white"

define loop block_loop
	set repeat "2"
	set description "A single block of trials"
	set skip "0"
	set offset "no"
	set item "trial_sequence"
	set column_order "correct_response"
	set cycles "4"
	set order "random"
	setcycle 0 correct_response "1"
	setcycle 1 correct_response "2"
	setcycle 2 correct_response "3"
	setcycle 3 correct_response "4"
	run trial_sequence

define sketchpad black_display
	set duration "500"
	set description "Displays stimuli"

define boks boks
	set timeout "2000"
	set description "Collects input from a boks"
	set dev "autodetect"
	set _dummy "no"

define inline_script init
	set _run ""
	___prepare__
	from openexp.canvas import canvas
	my_canvas = canvas(exp)
	my_canvas.text('connecting ...')
	my_canvas.show()
	__end__
	set description "Executes Python code"

define sequence experiment
	set flush_keyboard "yes"
	set description "The main sequence of the experiment"
	run init "always"
	run boks_init "always"
	run boks_info "always"
	run form_test_selection "always"
	run test1 "[test1] = yes"
	run test2 "[test2] = yes"
	run test3 "[test3] = yes"

define logger logger
	set description "Logs experimental data"

define sequence test3_sequence
	set flush_keyboard "yes"
	set description "Runs a number of items in sequence"
	run black_display "always"
	run white_display "always"
	run boks "always"
	run logger "always"

define sequence trial_sequence
	set flush_keyboard "yes"
	set description "A single trial"
	run sketchpad "always"
	run boks "always"
	run feedback "always"
	run logger "always"

define feedback test1_results
	set duration "keypress"
	set reset_variables "yes"
	set description "Provides feedback to the participant"
	draw textline 0.0 160.0 "Press any key to exit" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"
	draw textline 0.0 -64.0 "Mean: [mean_lat] ms" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"
	draw textline 0.0 0.0 "Median: [median_lat] ms" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"
	draw textline 0.0 64.0 "Std = [std_lat] ms" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"
	draw textline 0.0 -160.0 "Response latency stats" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"

define form_base form_test_selection
	set rows "1;1;1"
	set description "A generic form plug-in"
	set cols "1"
	widget 0 0 1 1 button var="test1" text="Test minimum response latency"
	widget 0 1 1 1 button var="test2" text="Button responses in example experiment"
	widget 0 2 1 1 button var="test3" text="Photodiode response to white display"


define sketchpad sketchpad
	set duration "0"
	set description "Displays stimuli"
	set start_response_interval "no"
	draw fixdot 0 0 color=white show_if="always"
	draw textline 0 -128 "Press button [correct_response] within 2000ms" center=1 color=white font_family="mono" font_size=18 font_italic=no font_bold=no show_if="always"

define boks boks_init
	set timeout "1"
	set description "Collects input from a boks"
	set dev "autodetect"
	set _dummy "no"

define reset_feedback reset_feedback

define sequence test2_sequence
	set flush_keyboard "yes"
	set description "A sequence containing a single block of trials followed by feedback to the participant"
	run reset_feedback "always"
	run block_loop "always"

define inline_script test1_script
	___run__
	import numpy as np
	
	N = 100 # Number of tests
	
	exp.boks.set_timeout(None)
	exp.boks.get_button_press()
	exp.boks.set_continuous(True)
	a = np.empty(N)
	for i in range(N):
		t1 = self.time()
		button, t2 = exp.boks.get_button_press()
		a[i] = t2-t1
	exp.set('mean_lat', a.mean())
	exp.set('median_lat', np.median(a))
	exp.set('std_lat', np.std(a))
	__end__
	set _prepare ""
	set description "Executes Python code"

